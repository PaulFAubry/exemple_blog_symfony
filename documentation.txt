*************************************************************************************
VERSION DE PHP
*************************************************************************************
php -v
PHP 7.4.11 (cli) (built: Sep 29 2020 13:18:06) ( ZTS Visual C++ 2017 x64 )
Copyright (c) The PHP Group
Zend Engine v3.4.0, Copyright (c) Zend Technologies

*************************************************************************************
VERSION DE COMPOSER
*************************************************************************************
composer -V
Composer version 2.0.11 2021-02-24 14:57:23

*************************************************************************************
CREATION DE PROJET
*************************************************************************************
composer create-project symfony/website-skeleton demo

*************************************************************************************
ON ENTRE DANS LE DOSSIER DEMO
*************************************************************************************
cd demo

*************************************************************************************
OUVRIR VISUAL STUDIO CODE
*************************************************************************************
code .

*************************************************************************************
ON CREE UN CONTROLLER QUI S'APPELLE BlogController
*************************************************************************************
php bin/console make:controller

 Choose a name for your controller class (e.g. OrangePuppyController):
 > BlogController

 created: src/Controller/BlogController.php
 created: templates/blog/index.html.twig

 
  Success! 
 

 Next: Open your new controller class and add some pages!

*************************************************************************************
ON CREE UNE BASE DE DONNEES QUI S'APPELLE blog_symphony
*************************************************************************************
Dans le fichier .env, on modifie cette ligne :
DATABASE_URL="mysql://root@127.0.0.1:3306/blog_symphony?serverVersion=mariadb-10.4.11"

Il faut enlever le # pour que cela fonctionne !
   
php bin/console doctrine:database:create
Created database `blog_symphony` for connection named default

*************************************************************************************
ON CREE UNE TABLE QUI S'APPELLE Article
*************************************************************************************
php bin/console make:entity

 Class name of the entity to create or update (e.g. TinyPuppy):
 > Article

 created: src/Entity/Article.php
 created: src/Repository/ArticleRepository.php
 
 Entity generated! Now let's add some fields!
 You can always add more fields later manually or by re-running this command.

*************************************************************************************
ON CREE UNE PROPRIETE QUI S'APPELLE title
*************************************************************************************
 New property name (press <return> to stop adding fields):
 > title

 Field type (enter ? to see all types) [string]:
 > ?

Main types
  * string
  * text
  * boolean
  * integer (or smallint, bigint)
  * float

Relationships / Associations
  * relation (a wizard will help you build the relation)
  * ManyToOne
  * OneToMany
  * ManyToMany
  * OneToOne

Array/Object Types
  * array (or simple_array)
  * json
  * object
  * binary
  * blob

Date/Time Types
  * datetime (or datetime_immutable)
  * datetimetz (or datetimetz_immutable)
  * date (or date_immutable)
  * time (or time_immutable)
  * dateinterval

Other Types
  * ascii_string
  * decimal
  * guid
  * json_array


 Field type (enter ? to see all types) [string]:
 >

 Field length [255]:
 > 

 Can this field be null in the database (nullable) (yes/no) [no]:
 > 

 updated: src/Entity/Article.php
 
*************************************************************************************
ON CREE UNE PROPRIETE QUI S'APPELLE content DE TYPE TEXTE
*************************************************************************************
 Add another property? Enter the property name (or press <return> to stop adding fields):
 > content

 Field type (enter ? to see all types) [string]:
 > text

 Can this field be null in the database (nullable) (yes/no) [no]:
 > 

 updated: src/Entity/Article.php

*************************************************************************************
ON CREE UNE PROPRIETE QUI S'APPELLE image DE TYPE STRING
*************************************************************************************
 Add another property? Enter the property name (or press <return> to stop adding fields):
 > image

 Field type (enter ? to see all types) [string]:
 >

 Field length [255]:
 >

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Article.php

*************************************************************************************
ON CREE UNE PROPRIETE QUI S'APPELLE createdAt DE TYPE DATETIME
*************************************************************************************
 Add another property? Enter the property name (or press <return> to stop adding fields):
 > createdAt

 Field type (enter ? to see all types) [datetime]:
 >

 Can this field be null in the database (nullable) (yes/no) [no]:
 >

 updated: src/Entity/Article.php

 Add another property? Enter the property name (or press <return> to stop adding fields):
 >
 
  Success! 

 Next: When you're ready, create a migration with php bin/console make:migration

*************************************************************************************
CREER LA MIGRATION
*************************************************************************************
php bin/console make:migration
 
  Success! 

 Next: Review the new migration "migrations/Version20210329101914.php"
 Then: Run the migration with php bin/console doctrine:migrations:migrate
 See https://symfony.com/doc/current/bundles/DoctrineMigrationsBundle/index.html

*************************************************************************************
APPELER LE SCRIPT QUI VA FAIRE TOURNER LES MIGRATIONS
*************************************************************************************
php bin/console doctrine:migrations:migrate

 WARNING! You are about to execute a migration in database "blog_symphony" that could result in schema changes and data loss. Are you 
sure you wish to continue? (yes/no) [yes]:
 > yes

[notice] Migrating up to DoctrineMigrations\Version20210329101914
[notice] finished in 531ms, used 18M memory, 1 migrations executed, 1 sql queries

*************************************************************************************
INSTALLATION DU COMPOSANT FIXTURE
*************************************************************************************
composer require orm-fixtures --dev 

*************************************************************************************
CREER DES FIXTURES
UN FICHIER ArticlesFixtures.php SERA CREE DANS LE DOSSIER DataFixtures
*************************************************************************************
php bin/console make:fixtures

 The class name of the fixtures to create (e.g. AppFixtures):
 > ArticlesFixtures  

 created: src/DataFixtures/ArticlesFixtures.php
 
  Success! 

 Next: Open your new fixtures class and start customizing it.
 Load your fixtures by running: php bin/console doctrine:fixtures:load
 Docs: https://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html
 
*************************************************************************************
APRES AVOIR MODIFIE LE FICHIER ArticlesFixtures.php, NOUS ALLONS CREER NOS DONNEES  
*************************************************************************************
php bin/console doctrine:fixture:load 

 Careful, database "blog_symphony" will be purged. Do you want to continue? (yes/no) [no]:
 > yes

   > purging database
   > loading App\DataFixtures\AppFixtures
   > loading App\DataFixtures\ArticlesFixtures

*************************************************************************************
DEMARRER LE SERVEUR 
*************************************************************************************
symfony server:start

*************************************************************************************
ERREUR 
*************************************************************************************
Si on obtient l'erreur suivante :

"An exception occurred in driver: SQLSTATE[HY000] [2002]
Aucune connexion n’a pu être établie car l’ordinateur cible l’a expressément refusée."

Il faut démarrer le SGBDR avec xampp !